package com.examly.plantcare.entity;

import lombok.*;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.time.LocalDateTime;

@Entity
@Table(name = "care_tasks")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class CareTask {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "plant_id", nullable = false)
    @JsonIgnore
    private Plant plant;

    @Enumerated(EnumType.STRING)
    @Column(name = "task_type", nullable = false)
    private TaskType taskType;

    @Column(name = "scheduled_date", nullable = false)
    private LocalDateTime scheduledDate;

    private LocalDateTime completedDate;

    @Enumerated(EnumType.STRING)
    private Status status;

    @Enumerated(EnumType.STRING)
    private Priority priority;

    @Column(columnDefinition = "TEXT")
    private String notes;

    private Boolean reminderSent = false;
    private Boolean autoGenerated = false;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "completed_by")
    @JsonIgnore
    private User completedBy;

    @Column(name = "created_date", updatable = false)
    private LocalDateTime createdDate = LocalDateTime.now();

    @Transient
    private Long plantId;

    // ENUMS
    public enum TaskType {
        WATERING, FERTILIZING, PRUNING, REPOTTING, PEST_INSPECTION, HEALTH_CHECK, CLEANING
    }

    public enum Status {
        PENDING, COMPLETED, SKIPPED, OVERDUE
    }

    public enum Priority {
        LOW, MEDIUM, HIGH, URGENT
    }

    // Manual setters to fix Lombok issues
    public void setStatus(Status status) {
        this.status = status;
    }

    public void setCompletedDate(LocalDateTime completedDate) {
        this.completedDate = completedDate;
    }

    public void setScheduledDate(LocalDateTime scheduledDate) {
        this.scheduledDate = scheduledDate;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getPlantId() {
        return plantId != null ? plantId : (plant != null ? plant.getId() : null);
    }

    public void setPlantId(Long plantId) {
        this.plantId = plantId;
    }

    public Plant getPlant() {
        return plant;
    }

    public void setPlant(Plant plant) {
        this.plant = plant;
    }
    
    public void setCreatedDate(LocalDateTime createdDate) {
        this.createdDate = createdDate;
    }
    
    public LocalDateTime getCreatedDate() {
        return createdDate;
    }
    
    public Status getStatus() {
        return status;
    }
    
    public void setTaskType(TaskType taskType) {
        this.taskType = taskType;
    }
    
    public void setPriority(Priority priority) {
        this.priority = priority;
    }
    
    public void setNotes(String notes) {
        this.notes = notes;
    }
    
    public TaskType getTaskType() {
        return taskType;
    }
    
    public LocalDateTime getScheduledDate() {
        return scheduledDate;
    }
    
    public Priority getPriority() {
        return priority;
    }
    
    public String getNotes() {
        return notes;
    }
}
